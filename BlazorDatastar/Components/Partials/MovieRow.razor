@using BlazorDatastar.Models
@using BlazorDatastar.Utils
@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject IAntiforgery Antiforgery

<tr class="movie-row">
    <td class="movie-table-title">@Movie.Title</td>
    <td class="movie-table-score @(Flash ? "cell-changed-animation" : null)" data-on-animationend="el.classList.remove('cell-changed-animation')" id="@GetScoreTdId()">@FormattedAverageScore</td>
    <td class="movie-table-actions" id="@GetVoteTdId()">
        @if (Movie.HasUserVoted(CurrentUserId))
        {
            <confirmation-view timeout="3000">
                <span slot="initial-content">
                    <span class="badge bg-success">Voted</span>
                    <button class="btn btn-danger btn-sm ms-2">✖</button>
                </span>
                <span slot="confirmation-content">
                    Sure?
                    <button class="btn btn-primary btn-sm ms-2" data-action="confirm" data-on-click="@GetDeleteUrl()">Yes</button>
                    <button class="btn btn-secondary btn-sm ms-2" data-action="confirm">No</button>        
                </span>
            </confirmation-view>
        }
        else
        {
            <form method="post" data-on-submit="@GetPostUrl()" action="@GetUrl()" class="d-flex align-items-center gap-2">
                <AntiforgeryToken />
                <select name="score" class="form-select form-select-sm w-auto">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
                <button type="submit" class="btn btn-primary btn-sm">Vote</button>
            </form>
        }
    </td>
</tr>

@code {
    [Parameter] public Movie Movie { get; set; } = default!;
    [Parameter] public bool Flash { get; set; } = false;

    private Guid CurrentUserId => Guid.Parse(CookieHelper.GetOrCreateUserId(HttpContextAccessor.HttpContext!));

    private string GetVoteTdId()
    {
        return $"vote-td-{Movie.Id}";
    }

    private string GetScoreTdId()
    {
        return $"score-td-{Movie.Id}";
    }

    private string GetUrl()
    {
        return $"/vote/{Movie.Id}";
    }

    private string GetPostUrl()
    {
        return $"@post('{GetUrl()}', {{contentType: 'form'}})";
    }

    private string GetDeleteUrl()
    {
        return $"@delete('{GetUrl()}')";
    }

    private string FormattedAverageScore => Movie?.AverageScore.ToString("F2") ?? "0.00";
}
